AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys IAM roles and policies required for the Suse CAP Quick Start
Parameters:
  LambdaZipsBucketName:
    Description: Bucket Name where the lambda zip files should be placed
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: 'Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).'
    Default: aws-quickstart
    Description: 'S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: 'Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).'
    Default: quickstart-suse-cloud-application-platform/
    Description: 'S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).'
    Type: String
  DeleteLambdaZipsBucketContents:
    Type: String
    AllowedValues: [ "True", "False" ]
    Default: "False"
Conditions:
  CreateDeleteBucketContentsRole: !Equals
  - !Ref 'DeleteLambdaZipsBucketContents'
  - "True"
Resources:
  DeleteBucketContentsRole:
    Condition: CreateDeleteBucketContentsRole
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: deletebucketcontents
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
            - !Sub 'arn:aws:s3:::${LambdaZipsBucketName}/*'
            - !Sub 'arn:aws:s3:::${LambdaZipsBucketName}'
  CopyZipsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: lambda-copier
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:DeleteObject
            Resource: !Sub 'arn:aws:s3:::${LambdaZipsBucketName}/${QSS3KeyPrefix}*'
  ControlPlaneProvisionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS: !GetAtt QuickStartStackMakerRole.Arn
          Action: sts:AssumeRole
        - Effect: Allow
          Principal:
            AWS: !GetAtt BastionRole.Arn
          Action: sts:AssumeRole
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: eksStackPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cloudformation:*
            - eks:*
            - ec2:DescribeSecurityGroups
            - ec2:DescribeSubnets
            Resource: "*"
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${QSS3BucketName}/*"
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            Resource:
            - "*"
  ControlPlaneRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: eks.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
  ControlPlanePassRole:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action: iam:PassRole
          Resource: !GetAtt ControlPlaneRole.Arn
      PolicyName: !Sub "${AWS::StackName}-ControlPlanePassRole"
      Roles: [ !Ref ControlPlaneProvisionRole ]
  QuickStartStackMakerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: CfnStackAssumeRole
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - lambda:AddPermission
            - lambda:RemovePermission
            Resource:  "*"
          - Effect: Allow
            Action:
            - events:PutRule
            - events:DeleteRule
            - events:PutTargets
            - events:RemoveTargets
            Resource:  "*"
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource:  !GetAtt ControlPlaneRole.Arn
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - arn:aws:logs:*:*:*
  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref NodeInstanceRole
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
      - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  BastionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: QSBucketAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${QSS3BucketName}/*"
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:GetLogEvents
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutRetentionPolicy
            - logs:PutMetricFilter
            - logs:CreateLogGroup
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*"
          - Effect: Allow
            Action:
            - ec2:AssociateAddress
            - ec2:DescribeAddresses
            Resource: "*"
Outputs:
  DeleteBucketContentsRoleArn:
    Value: !If [ CreateDeleteBucketContentsRole, !GetAtt DeleteBucketContentsRole.Arn, "" ]
  CopyZipsRoleArn:
    Value: !GetAtt CopyZipsRole.Arn
  QuickStartStackMakerRoleArn:
    Value: !GetAtt QuickStartStackMakerRole.Arn
  ControlPlaneRoleArn:
    Value: !GetAtt ControlPlaneRole.Arn
  ControlPlaneProvisionRoleArn:
    Value: !GetAtt ControlPlaneProvisionRole.Arn
  NodeInstanceProfile:
    Value: !Ref NodeInstanceProfile
  BastionRole:
    Value: !Ref BastionRole